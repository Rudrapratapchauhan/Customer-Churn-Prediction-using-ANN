{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNuso68B1aGfTLUNUrJqUM3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":5,"metadata":{"id":"oBZP9w_R9Kv0","executionInfo":{"status":"ok","timestamp":1709010983065,"user_tz":-330,"elapsed":737,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"outputs":[],"source":["from google.colab import drive"]},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q_qQyglr-AMZ","executionInfo":{"status":"ok","timestamp":1709011011547,"user_tz":-330,"elapsed":27969,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"cf10a08d-94da-4340-be6f-cc6058a9989b"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"2xwoq29c_KdO","executionInfo":{"status":"ok","timestamp":1709011085243,"user_tz":-330,"elapsed":2,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(\"/content/sample_data/Churn_Modelling.csv\")\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f-K9xHFm_U5o","executionInfo":{"status":"ok","timestamp":1709011086381,"user_tz":-330,"elapsed":7,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"e1fbabea-22b3-4f67-ab96-ff079fdb7a23"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10000, 14)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"jCwhAsmO_m9e","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1709011091209,"user_tz":-330,"elapsed":777,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"343d108f-5563-4c64-cbc0-60b026d2081f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n","0          1    15634602  Hargrave          619    France  Female   42   \n","1          2    15647311      Hill          608     Spain  Female   41   \n","2          3    15619304      Onio          502    France  Female   42   \n","3          4    15701354      Boni          699    France  Female   39   \n","4          5    15737888  Mitchell          850     Spain  Female   43   \n","\n","   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n","0       2       0.00              1          1               1   \n","1       1   83807.86              1          0               1   \n","2       8  159660.80              3          1               0   \n","3       1       0.00              2          0               0   \n","4       2  125510.82              1          1               1   \n","\n","   EstimatedSalary  Exited  \n","0        101348.88       1  \n","1        112542.58       0  \n","2        113931.57       1  \n","3         93826.63       0  \n","4         79084.10       0  "],"text/html":["\n","  <div id=\"df-978a865e-4259-4d06-8e2f-0efecea3cc70\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RowNumber</th>\n","      <th>CustomerId</th>\n","      <th>Surname</th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>15634602</td>\n","      <td>Hargrave</td>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>15647311</td>\n","      <td>Hill</td>\n","      <td>608</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>15619304</td>\n","      <td>Onio</td>\n","      <td>502</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>15701354</td>\n","      <td>Boni</td>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>15737888</td>\n","      <td>Mitchell</td>\n","      <td>850</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-978a865e-4259-4d06-8e2f-0efecea3cc70')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-978a865e-4259-4d06-8e2f-0efecea3cc70 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-978a865e-4259-4d06-8e2f-0efecea3cc70');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab7878a2-8ff9-49a0-bf41-2110e2f985e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab7878a2-8ff9-49a0-bf41-2110e2f985e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab7878a2-8ff9-49a0-bf41-2110e2f985e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"RowNumber\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2886,\n        \"min\": 1,\n        \"max\": 10000,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          6253,\n          4685,\n          1732\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustomerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 71936,\n        \"min\": 15565701,\n        \"max\": 15815690,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          15687492,\n          15736963,\n          15721730\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Surname\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2932,\n        \"samples\": [\n          \"McGuirk\",\n          \"Torkelson\",\n          \"Rapuluchukwu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CreditScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96,\n        \"min\": 350,\n        \"max\": 850,\n        \"num_unique_values\": 460,\n        \"samples\": [\n          754,\n          533,\n          744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Geography\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"France\",\n          \"Spain\",\n          \"Germany\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 18,\n        \"max\": 92,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          61,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          6,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62397.405202385955,\n        \"min\": 0.0,\n        \"max\": 250898.09,\n        \"num_unique_values\": 6382,\n        \"samples\": [\n          117707.18,\n          133050.97\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumOfProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasCrCard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsActiveMember\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EstimatedSalary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57510.49281769816,\n        \"min\": 11.58,\n        \"max\": 199992.48,\n        \"num_unique_values\": 9999,\n        \"samples\": [\n          100809.99,\n          95273.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exited\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hxOBqenr_vQp","executionInfo":{"status":"ok","timestamp":1709011092714,"user_tz":-330,"elapsed":4,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"5aa091f7-1c61-4677-ed41-0e6ec137e81a"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['RowNumber', 'CustomerId', 'Surname', 'CreditScore', 'Geography',\n","       'Gender', 'Age', 'Tenure', 'Balance', 'NumOfProducts', 'HasCrCard',\n","       'IsActiveMember', 'EstimatedSalary', 'Exited'],\n","      dtype='object')"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df.drop(columns = ['RowNumber', 'CustomerId','Surname'], inplace=True)"],"metadata":{"id":"W42Lv7P-_8Li","executionInfo":{"status":"ok","timestamp":1709011096843,"user_tz":-330,"elapsed":2,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xrQyqdfqAQiC","executionInfo":{"status":"ok","timestamp":1709011100122,"user_tz":-330,"elapsed":1029,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"c2e68b21-f410-494a-c244-10dda83180c1"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n","0          619    France  Female   42       2       0.00              1   \n","1          608     Spain  Female   41       1   83807.86              1   \n","2          502    France  Female   42       8  159660.80              3   \n","3          699    France  Female   39       1       0.00              2   \n","4          850     Spain  Female   43       2  125510.82              1   \n","\n","   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n","0          1               1        101348.88       1  \n","1          0               1        112542.58       0  \n","2          1               0        113931.57       1  \n","3          0               0         93826.63       0  \n","4          1               1         79084.10       0  "],"text/html":["\n","  <div id=\"df-60394b4b-662e-4690-bbcc-8a96695c475c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Geography</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>502</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>699</td>\n","      <td>France</td>\n","      <td>Female</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>850</td>\n","      <td>Spain</td>\n","      <td>Female</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60394b4b-662e-4690-bbcc-8a96695c475c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-60394b4b-662e-4690-bbcc-8a96695c475c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-60394b4b-662e-4690-bbcc-8a96695c475c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f32cefa1-4c79-44b6-afbc-6af5851d299c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f32cefa1-4c79-44b6-afbc-6af5851d299c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f32cefa1-4c79-44b6-afbc-6af5851d299c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"CreditScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96,\n        \"min\": 350,\n        \"max\": 850,\n        \"num_unique_values\": 460,\n        \"samples\": [\n          754,\n          533,\n          744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Geography\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"France\",\n          \"Spain\",\n          \"Germany\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 18,\n        \"max\": 92,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          61,\n          42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          6,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62397.405202385955,\n        \"min\": 0.0,\n        \"max\": 250898.09,\n        \"num_unique_values\": 6382,\n        \"samples\": [\n          117707.18,\n          133050.97\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumOfProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasCrCard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsActiveMember\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EstimatedSalary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57510.49281769816,\n        \"min\": 11.58,\n        \"max\": 199992.48,\n        \"num_unique_values\": 9999,\n        \"samples\": [\n          100809.99,\n          95273.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exited\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df['Geography'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cyuOaS9gAS-m","executionInfo":{"status":"ok","timestamp":1709011100123,"user_tz":-330,"elapsed":7,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"3b40fdd0-a933-4b14-9465-ce0136394fe8"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["France     5014\n","Germany    2509\n","Spain      2477\n","Name: Geography, dtype: int64"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df['Gender'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dSJ0S1q2BLhv","executionInfo":{"status":"ok","timestamp":1709011100814,"user_tz":-330,"elapsed":4,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"a5255035-6da5-4ff7-8460-8ca3ab63fe74"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Male      5457\n","Female    4543\n","Name: Gender, dtype: int64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df = pd.get_dummies(df, columns=['Geography', 'Gender'], drop_first=True)"],"metadata":{"id":"GCzqMveRBTjz","executionInfo":{"status":"ok","timestamp":1709011101445,"user_tz":-330,"elapsed":2,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"EIp6bF1xBwrQ","executionInfo":{"status":"ok","timestamp":1709011102272,"user_tz":-330,"elapsed":11,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"7bcb10c3-e28c-41f4-a7b9-36ebad55968e"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CreditScore  Age  Tenure    Balance  NumOfProducts  HasCrCard  \\\n","0          619   42       2       0.00              1          1   \n","1          608   41       1   83807.86              1          0   \n","2          502   42       8  159660.80              3          1   \n","3          699   39       1       0.00              2          0   \n","4          850   43       2  125510.82              1          1   \n","\n","   IsActiveMember  EstimatedSalary  Exited  Geography_Germany  \\\n","0               1        101348.88       1                  0   \n","1               1        112542.58       0                  0   \n","2               0        113931.57       1                  0   \n","3               0         93826.63       0                  0   \n","4               1         79084.10       0                  0   \n","\n","   Geography_Spain  Gender_Male  \n","0                0            0  \n","1                1            0  \n","2                0            0  \n","3                0            0  \n","4                1            0  "],"text/html":["\n","  <div id=\"df-4c050316-de9e-40c8-b77a-9de163aa3f47\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CreditScore</th>\n","      <th>Age</th>\n","      <th>Tenure</th>\n","      <th>Balance</th>\n","      <th>NumOfProducts</th>\n","      <th>HasCrCard</th>\n","      <th>IsActiveMember</th>\n","      <th>EstimatedSalary</th>\n","      <th>Exited</th>\n","      <th>Geography_Germany</th>\n","      <th>Geography_Spain</th>\n","      <th>Gender_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>619</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>101348.88</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>608</td>\n","      <td>41</td>\n","      <td>1</td>\n","      <td>83807.86</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112542.58</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>502</td>\n","      <td>42</td>\n","      <td>8</td>\n","      <td>159660.80</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113931.57</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>699</td>\n","      <td>39</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>93826.63</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>850</td>\n","      <td>43</td>\n","      <td>2</td>\n","      <td>125510.82</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>79084.10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c050316-de9e-40c8-b77a-9de163aa3f47')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4c050316-de9e-40c8-b77a-9de163aa3f47 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4c050316-de9e-40c8-b77a-9de163aa3f47');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aa4f6622-5a23-4541-bd6d-415da33e3f25\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aa4f6622-5a23-4541-bd6d-415da33e3f25')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aa4f6622-5a23-4541-bd6d-415da33e3f25 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"CreditScore\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 96,\n        \"min\": 350,\n        \"max\": 850,\n        \"num_unique_values\": 460,\n        \"samples\": [\n          754,\n          533,\n          744\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 18,\n        \"max\": 92,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          61,\n          42,\n          59\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tenure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          6,\n          2,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Balance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62397.405202385955,\n        \"min\": 0.0,\n        \"max\": 250898.09,\n        \"num_unique_values\": 6382,\n        \"samples\": [\n          117707.18,\n          133050.97,\n          124271.26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumOfProducts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HasCrCard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"IsActiveMember\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EstimatedSalary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57510.49281769816,\n        \"min\": 11.58,\n        \"max\": 199992.48,\n        \"num_unique_values\": 9999,\n        \"samples\": [\n          100809.99,\n          95273.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Exited\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Geography_Germany\",\n      \"properties\": {\n        \"dtype\": \"uint8\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Geography_Spain\",\n      \"properties\": {\n        \"dtype\": \"uint8\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender_Male\",\n      \"properties\": {\n        \"dtype\": \"uint8\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["X =df.drop(columns=['Exited'])\n","y =df['Exited'].values\n","\n","from sklearn.model_selection import train_test_split\n","X_train,X_test, y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)\n"],"metadata":{"id":"g96tBxaxCVvN","executionInfo":{"status":"ok","timestamp":1709011103934,"user_tz":-330,"elapsed":1143,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","\n","X_train_trf= scaler.fit_transform(X_train)\n","X_test_trf = scaler.transform(X_test)"],"metadata":{"id":"UBn-8mAzCj0t","executionInfo":{"status":"ok","timestamp":1709011107723,"user_tz":-330,"elapsed":2,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["import tensorflow\n","from tensorflow import keras\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense"],"metadata":{"id":"UvhfapN9E0lF","executionInfo":{"status":"ok","timestamp":1709011111920,"user_tz":-330,"elapsed":3409,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","\n","model.add(Dense(11, activation='sigmoid', input_dim=11))\n","model.add(Dense(11, activation='sigmoid'))\n","model.add(Dense(1, activation='sigmoid'))"],"metadata":{"id":"d6okjmaNFygI","executionInfo":{"status":"ok","timestamp":1709011112612,"user_tz":-330,"elapsed":694,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jDZMCbYoHSrC","executionInfo":{"status":"ok","timestamp":1709011112612,"user_tz":-330,"elapsed":7,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"765f44c2-d04b-4f9f-c4ff-8ca5a6a04b6a"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 11)                132       \n","                                                                 \n"," dense_1 (Dense)             (None, 11)                132       \n","                                                                 \n"," dense_2 (Dense)             (None, 1)                 12        \n","                                                                 \n","=================================================================\n","Total params: 276 (1.08 KB)\n","Trainable params: 276 (1.08 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(optimizer='Adam',loss='binary_crossentropy',metrics=['accuracy'])"],"metadata":{"id":"guOZ75wUIDaF","executionInfo":{"status":"ok","timestamp":1709011112612,"user_tz":-330,"elapsed":5,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["history = model.fit(X_train,y_train,batch_size=50,epochs=100,verbose=1,validation_split=0.2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b1zp4C5SJIwt","executionInfo":{"status":"ok","timestamp":1709011157584,"user_tz":-330,"elapsed":42763,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"5d4333b3-815b-4629-d7f3-cac5ae37447e"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","128/128 [==============================] - 3s 7ms/step - loss: 1.0516 - accuracy: 0.2044 - val_loss: 0.8139 - val_accuracy: 0.2031\n","Epoch 2/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.6813 - accuracy: 0.5738 - val_loss: 0.5988 - val_accuracy: 0.7969\n","Epoch 3/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5600 - accuracy: 0.7958 - val_loss: 0.5361 - val_accuracy: 0.7969\n","Epoch 4/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5257 - accuracy: 0.7958 - val_loss: 0.5185 - val_accuracy: 0.7969\n","Epoch 5/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5149 - accuracy: 0.7958 - val_loss: 0.5124 - val_accuracy: 0.7969\n","Epoch 6/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5114 - accuracy: 0.7958 - val_loss: 0.5096 - val_accuracy: 0.7969\n","Epoch 7/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5099 - accuracy: 0.7958 - val_loss: 0.5085 - val_accuracy: 0.7969\n","Epoch 8/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5090 - accuracy: 0.7958 - val_loss: 0.5073 - val_accuracy: 0.7969\n","Epoch 9/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5084 - accuracy: 0.7958 - val_loss: 0.5065 - val_accuracy: 0.7969\n","Epoch 10/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5078 - accuracy: 0.7958 - val_loss: 0.5056 - val_accuracy: 0.7969\n","Epoch 11/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5073 - accuracy: 0.7958 - val_loss: 0.5049 - val_accuracy: 0.7969\n","Epoch 12/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5068 - accuracy: 0.7958 - val_loss: 0.5042 - val_accuracy: 0.7969\n","Epoch 13/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5063 - accuracy: 0.7958 - val_loss: 0.5035 - val_accuracy: 0.7969\n","Epoch 14/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5058 - accuracy: 0.7958 - val_loss: 0.5028 - val_accuracy: 0.7969\n","Epoch 15/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5053 - accuracy: 0.7958 - val_loss: 0.5021 - val_accuracy: 0.7969\n","Epoch 16/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5049 - accuracy: 0.7958 - val_loss: 0.5016 - val_accuracy: 0.7969\n","Epoch 17/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5047 - accuracy: 0.7958 - val_loss: 0.5009 - val_accuracy: 0.7969\n","Epoch 18/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5041 - accuracy: 0.7958 - val_loss: 0.5003 - val_accuracy: 0.7969\n","Epoch 19/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5036 - accuracy: 0.7958 - val_loss: 0.4999 - val_accuracy: 0.7969\n","Epoch 20/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5032 - accuracy: 0.7958 - val_loss: 0.4993 - val_accuracy: 0.7969\n","Epoch 21/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5029 - accuracy: 0.7958 - val_loss: 0.4988 - val_accuracy: 0.7969\n","Epoch 22/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5026 - accuracy: 0.7958 - val_loss: 0.4984 - val_accuracy: 0.7969\n","Epoch 23/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5022 - accuracy: 0.7958 - val_loss: 0.4980 - val_accuracy: 0.7969\n","Epoch 24/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5019 - accuracy: 0.7958 - val_loss: 0.4976 - val_accuracy: 0.7969\n","Epoch 25/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5019 - accuracy: 0.7958 - val_loss: 0.4973 - val_accuracy: 0.7969\n","Epoch 26/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5014 - accuracy: 0.7958 - val_loss: 0.4972 - val_accuracy: 0.7969\n","Epoch 27/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5012 - accuracy: 0.7958 - val_loss: 0.4969 - val_accuracy: 0.7969\n","Epoch 28/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5011 - accuracy: 0.7958 - val_loss: 0.4967 - val_accuracy: 0.7969\n","Epoch 29/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5009 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 30/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5007 - accuracy: 0.7958 - val_loss: 0.4963 - val_accuracy: 0.7969\n","Epoch 31/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5007 - accuracy: 0.7958 - val_loss: 0.4966 - val_accuracy: 0.7969\n","Epoch 32/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5004 - accuracy: 0.7958 - val_loss: 0.4965 - val_accuracy: 0.7969\n","Epoch 33/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5000 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 34/100\n","128/128 [==============================] - 0s 4ms/step - loss: 0.5007 - accuracy: 0.7958 - val_loss: 0.4955 - val_accuracy: 0.7969\n","Epoch 35/100\n","128/128 [==============================] - 1s 4ms/step - loss: 0.5002 - accuracy: 0.7958 - val_loss: 0.4955 - val_accuracy: 0.7969\n","Epoch 36/100\n","128/128 [==============================] - 0s 4ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4955 - val_accuracy: 0.7969\n","Epoch 37/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5000 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 38/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4953 - val_accuracy: 0.7969\n","Epoch 39/100\n","128/128 [==============================] - 1s 5ms/step - loss: 0.4997 - accuracy: 0.7958 - val_loss: 0.4953 - val_accuracy: 0.7969\n","Epoch 40/100\n","128/128 [==============================] - 1s 4ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4954 - val_accuracy: 0.7969\n","Epoch 41/100\n","128/128 [==============================] - 0s 4ms/step - loss: 0.4997 - accuracy: 0.7958 - val_loss: 0.4953 - val_accuracy: 0.7969\n","Epoch 42/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4996 - accuracy: 0.7958 - val_loss: 0.4953 - val_accuracy: 0.7969\n","Epoch 43/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4997 - accuracy: 0.7958 - val_loss: 0.4953 - val_accuracy: 0.7969\n","Epoch 44/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4995 - accuracy: 0.7958 - val_loss: 0.4953 - val_accuracy: 0.7969\n","Epoch 45/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4996 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 46/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4996 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 47/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4997 - accuracy: 0.7958 - val_loss: 0.4954 - val_accuracy: 0.7969\n","Epoch 48/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4995 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 49/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4996 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 50/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4994 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 51/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4995 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 52/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4995 - accuracy: 0.7958 - val_loss: 0.4952 - val_accuracy: 0.7969\n","Epoch 53/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4995 - accuracy: 0.7958 - val_loss: 0.4951 - val_accuracy: 0.7969\n","Epoch 54/100\n","128/128 [==============================] - 1s 4ms/step - loss: 0.4994 - accuracy: 0.7958 - val_loss: 0.4951 - val_accuracy: 0.7969\n","Epoch 55/100\n","128/128 [==============================] - 1s 5ms/step - loss: 0.4996 - accuracy: 0.7958 - val_loss: 0.4956 - val_accuracy: 0.7969\n","Epoch 56/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5000 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 57/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4991 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 58/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4963 - val_accuracy: 0.7969\n","Epoch 59/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4991 - accuracy: 0.7958 - val_loss: 0.4963 - val_accuracy: 0.7969\n","Epoch 60/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4989 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 61/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 62/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5000 - accuracy: 0.7958 - val_loss: 0.4963 - val_accuracy: 0.7969\n","Epoch 63/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5000 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 64/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 65/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4965 - val_accuracy: 0.7969\n","Epoch 66/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 67/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4966 - val_accuracy: 0.7969\n","Epoch 68/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 69/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4965 - val_accuracy: 0.7969\n","Epoch 70/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 71/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4965 - val_accuracy: 0.7969\n","Epoch 72/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4965 - val_accuracy: 0.7969\n","Epoch 73/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 74/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 75/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 76/100\n","128/128 [==============================] - 1s 4ms/step - loss: 0.4998 - accuracy: 0.7958 - val_loss: 0.4964 - val_accuracy: 0.7969\n","Epoch 77/100\n","128/128 [==============================] - 1s 5ms/step - loss: 0.4999 - accuracy: 0.7958 - val_loss: 0.4966 - val_accuracy: 0.7969\n","Epoch 78/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4963 - val_accuracy: 0.7969\n","Epoch 79/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 80/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 81/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 82/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 83/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 84/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 85/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 86/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 87/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4960 - val_accuracy: 0.7969\n","Epoch 88/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4989 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 89/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4991 - accuracy: 0.7958 - val_loss: 0.4959 - val_accuracy: 0.7969\n","Epoch 90/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4960 - val_accuracy: 0.7969\n","Epoch 91/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4991 - accuracy: 0.7958 - val_loss: 0.4959 - val_accuracy: 0.7969\n","Epoch 92/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4959 - val_accuracy: 0.7969\n","Epoch 93/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4989 - accuracy: 0.7958 - val_loss: 0.4960 - val_accuracy: 0.7969\n","Epoch 94/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4991 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 95/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4962 - val_accuracy: 0.7969\n","Epoch 96/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.4990 - accuracy: 0.7958 - val_loss: 0.4961 - val_accuracy: 0.7969\n","Epoch 97/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.4988 - accuracy: 0.7958 - val_loss: 0.4965 - val_accuracy: 0.7969\n","Epoch 98/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5011 - accuracy: 0.7958 - val_loss: 0.4975 - val_accuracy: 0.7969\n","Epoch 99/100\n","128/128 [==============================] - 0s 3ms/step - loss: 0.5014 - accuracy: 0.7958 - val_loss: 0.5008 - val_accuracy: 0.7969\n","Epoch 100/100\n","128/128 [==============================] - 0s 2ms/step - loss: 0.5028 - accuracy: 0.7958 - val_loss: 0.5007 - val_accuracy: 0.7969\n"]}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)"],"metadata":{"id":"A7PfgbT_Jg4H","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1709011158373,"user_tz":-330,"elapsed":794,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"d25acc68-79c7-45e7-aee3-ce7cbb3b63be"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["63/63 [==============================] - 0s 2ms/step\n"]}]},{"cell_type":"code","source":["y_pred"],"metadata":{"id":"1A6XvxbnK0zz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1709011160676,"user_tz":-330,"elapsed":448,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"a9252af6-810e-4297-eea9-1066919c467b"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.1648858 ],\n","       [0.26071855],\n","       [0.26071855],\n","       ...,\n","       [0.26071855],\n","       [0.26425672],\n","       [0.1648858 ]], dtype=float32)"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["y_pred = y_pred.argmax(axis=-1)"],"metadata":{"id":"eHP-9z9dLAiq","executionInfo":{"status":"ok","timestamp":1709011162579,"user_tz":-330,"elapsed":1,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(y_test,y_pred)"],"metadata":{"id":"jNhtL_UFLKcK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1709011166473,"user_tz":-330,"elapsed":6,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"74db47c8-c3df-411c-996e-5c7e00a11393"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7975"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n"],"metadata":{"id":"uUKEDSo0LWqP","executionInfo":{"status":"ok","timestamp":1709011168107,"user_tz":-330,"elapsed":3,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])"],"metadata":{"id":"JaFHNX3cVZ9w","colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"status":"ok","timestamp":1709011170503,"user_tz":-330,"elapsed":554,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"294a8107-743e-4d9d-f434-c18ff243c025"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7c02b4692f80>]"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.plot(history.history['accuracy'])\n","plt.plot(history.history['val_accuracy'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"k3To60vD-Ko-","executionInfo":{"status":"ok","timestamp":1709011211022,"user_tz":-330,"elapsed":520,"user":{"displayName":"RUDRA PRATAP CHAUHAN","userId":"14963768600802296661"}},"outputId":"91cf7774-0fdf-4130-9ece-f66aa164f785"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7c02b67d26e0>]"]},"metadata":{},"execution_count":34},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"1zDf9g65AYzy"},"execution_count":null,"outputs":[]}]}